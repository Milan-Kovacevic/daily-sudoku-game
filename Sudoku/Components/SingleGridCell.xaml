<UserControl
    x:Class="Sudoku.Components.SingleGridCell"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Sudoku.Components"
    mc:Ignorable="d"
    d:DesignHeight="450"
    d:DesignWidth="800">
    <UserControl.Resources>
        <BooleanToVisibilityConverter
            x:Key="BooleanToVisibilityConverter" />
    </UserControl.Resources>
    <Border>
        <TextBox
            x:Name="GridCell"
            Cursor="Pen"
            IsReadOnly="{Binding IsTextReadOnly}"
            Visibility="{Binding Path=DataContext.IsBoardVisible, RelativeSource={RelativeSource AncestorType={x:Type local:SudokuBoard}}, Converter={StaticResource BooleanToVisibilityConverter}}"
            Grid.Row="0"
            FontWeight="Regular"
            FontSize="28"
            BorderThickness="0"
            ClipToBounds="True"
            CaretBrush="Transparent"
            SelectionBrush="Transparent"
            PreviewMouseDown="TextBox_PreviewMouseDown"
            PreviewKeyDown="TextBox_PreviewKeyDown"
            PreviewTextInput="TextBox_PreviewTextInput"
            Padding="0"
            Text="{Binding CellText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            TextAlignment="Center"
            VerticalContentAlignment="Center"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch">
            <TextBox.Style>
                <Style
                    TargetType="TextBox">
                    <Setter
                        Property="Background"
                        Value="Transparent" />
                    <Setter
                        Property="Foreground"
                        Value="{DynamicResource SecondaryHueMidBrush}" />
                    <Style.Triggers>
                        <Trigger
                            Property="IsReadOnly"
                            Value="True">
                            <Setter
                                Property="Foreground"
                                Value="{DynamicResource SecondaryHueLightBrush}" />
                        </Trigger>
                        <Trigger
                            Property="IsFocused"
                            Value="true">
                            <Setter
                                Property="Foreground"
                                Value="{DynamicResource SecondaryHueMidForegroundBrush}" />
                        </Trigger>
                        <DataTrigger
                            Binding="{Binding IsTextInvalid}"
                            Value="False">
                            <Setter
                                Property="Background"
                                Value="Transparent" />
                        </DataTrigger>
                        <Trigger
                            Property="IsFocused"
                            Value="true">
                            <Setter
                                Property="Background"
                                Value="{DynamicResource PrimaryHueLightBrush}" />
                        </Trigger>
                        <DataTrigger
                            Binding="{Binding IsTextInvalid}"
                            Value="True">
                            <Setter
                                Property="Foreground"
                                Value="#E55C6C" />
                            <Setter
                                Property="Background"
                                Value="#F7CFD6" />
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                            To="-5"
                                            Duration="0:0:0.1"
                                            AutoReverse="True" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                            To="5"
                                            Duration="0:0:0.1"
                                            AutoReverse="True"
                                            BeginTime="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                            To="0"
                                            Duration="0:0:0.1"
                                            BeginTime="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>

            <TextBox.RenderTransform>
                <RotateTransform
                    Angle="0" />
            </TextBox.RenderTransform>
        </TextBox>
    </Border>

</UserControl>
